import{P as r,n as a,Q as o,R as u}from"./scheduler.C9EcQ0XW.js";import{w as l,r as i,a as f}from"./entry.DYUQrw6M.js";const e=Symbol("InputStore"),s=t=>typeof t!="object"||t===null?!1:"subscribe"in t,p=t=>s(t)?"set"in t&&"update"in t:!1,I=t=>{if(!p(t))throw console.error({InputStoreValue:t}),new Error("InputStore must be a writable store");if(r().has(e)){const n=o(e);return n.set(u(t)),n}else return a(e,t),t},b=()=>r().has(e)?o(e):(console.warn("InputStoreKey not found in context. Did you forget to call ensureInputContext?"),l({})),d=()=>{if(!r().has(e))return console.warn("InputStoreKey not found in context. Did you forget to call ensureInputContext?"),i({});const t=o(e);if(s(t))return f(t);throw new Error(`InputStoreKey is not a readable store: ${t}`)};function y(t,...n){return t.call(this,...n)}export{d as a,I as e,b as g,y as p};
